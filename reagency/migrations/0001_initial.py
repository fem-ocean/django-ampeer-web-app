# Generated by Django 4.2.3 on 2023-08-28 14:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("gender", models.CharField(max_length=1)),
                ("tel", models.CharField(max_length=12)),
                ("alt_tel", models.CharField(blank=True, max_length=12, null=True)),
                ("profile_pic", models.URLField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="LandlordUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("maritalStatus", models.CharField(max_length=1)),
                ("dob", models.DateField()),
                ("govt_id", models.URLField()),
                ("idtype", models.CharField(default="", max_length=60)),
                ("bank_name", models.CharField(max_length=60)),
                ("bank_acct_num", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=50)),
                ("lga", models.CharField(max_length=50)),
                ("area_name", models.CharField(max_length=160)),
                (
                    "estate_name",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("street", models.CharField(max_length=50)),
                ("house_number", models.CharField(max_length=15)),
                ("emergency_contact_name", models.CharField(max_length=200)),
                ("emergency_contact_address", models.CharField(max_length=400)),
                ("emergency_contact_phone", models.CharField(max_length=12)),
                (
                    "emergency_contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListingSpecialistUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dob", models.DateField()),
                ("maritalStatus", models.CharField(max_length=1)),
                ("govt_id", models.URLField()),
                ("idtype", models.CharField(default="", max_length=60)),
                ("bank_name", models.CharField(max_length=60)),
                ("bank_acct_num", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=50)),
                ("lga", models.CharField(max_length=50)),
                ("area_name", models.CharField(max_length=160)),
                (
                    "estate_name",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("street", models.CharField(max_length=50)),
                ("house_number", models.CharField(max_length=15)),
                ("emergency_contact_name", models.CharField(max_length=200)),
                ("emergency_contact_address", models.CharField(max_length=400)),
                ("emergency_contact_phone", models.CharField(max_length=12)),
                (
                    "emergency_contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state", models.CharField(max_length=50)),
                ("lga", models.CharField(max_length=50)),
                ("area_name", models.CharField(max_length=160)),
                (
                    "estate_name",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("street", models.CharField(max_length=50)),
                ("landmark", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "closest_busstop",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_inflow", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rent_sale", models.CharField(max_length=5)),
                ("type", models.CharField(max_length=50)),
                ("bed", models.CharField(max_length=50)),
                ("price", models.PositiveBigIntegerField()),
                ("compound_size", models.PositiveSmallIntegerField()),
                ("interior_size", models.PositiveSmallIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("house_number", models.CharField(max_length=15)),
                ("int_vid", models.URLField()),
                ("ext_vid", models.URLField()),
                ("street_vid", models.URLField()),
                (
                    "landlord",
                    models.ForeignKey(
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="propowner",
                        to="reagency.landlorduser",
                    ),
                ),
                (
                    "listing_specialist",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="poster",
                        to="reagency.listingspecialistuser",
                    ),
                ),
                (
                    "prop_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proplocation",
                        to="reagency.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inflow",
            fields=[
                (
                    "payment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="reagency.payment",
                    ),
                ),
                ("source", models.CharField(max_length=100)),
                ("reference_number", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Outflow",
            fields=[
                (
                    "payment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="reagency.payment",
                    ),
                ),
                ("recipient", models.CharField(max_length=100)),
                ("transaction_id", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="ScoutUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dob", models.DateField()),
                ("maritalStatus", models.CharField(max_length=1)),
                ("idtype", models.CharField(default="", max_length=60)),
                ("govt_id", models.URLField()),
                ("bank_name", models.CharField(max_length=60)),
                ("bank_acct_num", models.CharField(max_length=10)),
                ("state", models.CharField(max_length=50)),
                ("lga", models.CharField(max_length=50)),
                ("area_name", models.CharField(max_length=160)),
                (
                    "estate_name",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("street", models.CharField(max_length=50)),
                ("house_number", models.CharField(max_length=15)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ScoutedProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("house_number", models.CharField(max_length=15)),
                ("relationship_with_property", models.CharField(max_length=200)),
                ("banner_on_house", models.CharField(max_length=5)),
                ("banner_pic", models.URLField(blank=True, null=True)),
                ("house_pic", models.URLField()),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="address",
                        to="reagency.location",
                    ),
                ),
                (
                    "scout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="propertyfinder",
                        to="reagency.scoutuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SavedProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "saved_property",
                    models.ManyToManyField(
                        blank=True,
                        related_name="savedproperties",
                        to="reagency.property",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usersavedprop",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PropManagerUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dob", models.DateField()),
                ("govt_id", models.URLField()),
                ("idtype", models.CharField(default="", max_length=60)),
                ("bank_name", models.CharField(max_length=60)),
                ("bank_acct_num", models.CharField(max_length=10)),
                ("company_name", models.CharField(max_length=200)),
                ("company_address", models.CharField(max_length=200)),
                ("position", models.CharField(max_length=200)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="property",
            name="property_manager",
            field=models.ForeignKey(
                default="",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="manager",
                to="reagency.propmanageruser",
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="scout",
            field=models.ForeignKey(
                default="",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="finder",
                to="reagency.scoutuser",
            ),
        ),
        migrations.CreateModel(
            name="ElectricitySupply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("house_number", models.CharField(max_length=15)),
                ("avg_supply_per_day", models.PositiveIntegerField()),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="electricitylocation",
                        to="reagency.location",
                    ),
                ),
            ],
        ),
    ]
